{"version":3,"sources":["vendor/ember-cli/app-prefix.js","learning/adapters/application.js","learning/app.js","learning/controllers/application.js","learning/controllers/results.js","learning/initializers/app-version.js","learning/initializers/export-application-global.js","learning/models/edge.js","learning/models/incoming-edge.js","learning/models/link.js","learning/models/postreq.js","learning/models/prereq.js","learning/models/topic.js","learning/router.js","learning/routes/application.js","learning/routes/index.js","learning/routes/results.js","learning/routes/topic.js","learning/serializers/topic.js","learning/templates/application.js","learning/templates/components/topic-graph.js","learning/templates/index.js","learning/templates/results.js","learning/templates/topic.js","learning/tests/adapters/application.jshint.js","learning/tests/app.jshint.js","learning/tests/controllers/application.jshint.js","learning/tests/controllers/results.jshint.js","learning/tests/helpers/resolver.js","learning/tests/helpers/resolver.jshint.js","learning/tests/helpers/start-app.js","learning/tests/helpers/start-app.jshint.js","learning/tests/models/edge.jshint.js","learning/tests/models/incoming-edge.jshint.js","learning/tests/models/link.jshint.js","learning/tests/models/postreq.jshint.js","learning/tests/models/prereq.jshint.js","learning/tests/models/topic.jshint.js","learning/tests/router.jshint.js","learning/tests/routes/application.jshint.js","learning/tests/routes/index.jshint.js","learning/tests/routes/results.jshint.js","learning/tests/routes/topic.jshint.js","learning/tests/serializers/topic.jshint.js","learning/tests/test-helper.js","learning/tests/test-helper.jshint.js","learning/tests/unit/adapters/application-test.js","learning/tests/unit/adapters/application-test.jshint.js","learning/tests/unit/controllers/application-test.js","learning/tests/unit/controllers/application-test.jshint.js","learning/tests/unit/controllers/results-test.js","learning/tests/unit/controllers/results-test.jshint.js","learning/tests/unit/controllers/topics-test.js","learning/tests/unit/controllers/topics-test.jshint.js","learning/tests/unit/models/edge-test.js","learning/tests/unit/models/edge-test.jshint.js","learning/tests/unit/models/incoming-edge-test.js","learning/tests/unit/models/incoming-edge-test.jshint.js","learning/tests/unit/models/link-test.js","learning/tests/unit/models/link-test.jshint.js","learning/tests/unit/models/postreq-test.js","learning/tests/unit/models/postreq-test.jshint.js","learning/tests/unit/models/prereq-test.js","learning/tests/unit/models/prereq-test.jshint.js","learning/tests/unit/models/topic-test.js","learning/tests/unit/models/topic-test.jshint.js","learning/tests/unit/routes/application-test.js","learning/tests/unit/routes/application-test.jshint.js","learning/tests/unit/routes/index-test.js","learning/tests/unit/routes/index-test.jshint.js","learning/tests/unit/routes/search/results-test.js","learning/tests/unit/routes/search/results-test.jshint.js","learning/tests/unit/routes/topic-test.js","learning/tests/unit/routes/topic-test.jshint.js","learning/tests/unit/routes/topics-test.js","learning/tests/unit/routes/topics-test.jshint.js","learning/tests/unit/serializers/topic-test.js","learning/tests/unit/serializers/topic-test.jshint.js","learning/tests/unit/views/topic-graph-test.js","learning/tests/unit/views/topic-graph-test.jshint.js","learning/tests/views/topic-graph.jshint.js","learning/views/topic-graph.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('learning/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].ActiveModelAdapter.extend({\n\t\thost: \"http://localhost:3000\" });\n\n});","define('learning/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'learning/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('learning/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({\n\t\tactions: {\n\t\t\tsearch: function search(query) {\n\t\t\t\tthis.transitionToRoute(\"results\", query);\n\t\t\t}\n\t\t}\n\t});\n\n});","define('learning/controllers/results', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ArrayController.extend({});\n\n});","define('learning/initializers/app-version', ['exports', 'learning/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('learning/initializers/export-application-global', ['exports', 'ember', 'learning/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('learning/models/edge', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    prereq_id: DS['default'].attr(\"number\"),\n    topic_id: DS['default'].attr(\"number\") });\n\n  // topic: DS.belongsTo('topic')\n\n});","define('learning/models/incoming-edge', ['exports', 'learning/models/edge'], function (exports, edge) {\n\n\t'use strict';\n\n\texports['default'] = edge['default'].extend();\n\n});","define('learning/models/link', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr(\"string\"),\n    url: DS['default'].attr(\"string\")\n  });\n\n});","define('learning/models/postreq', ['exports', 'learning/models/topic'], function (exports, topic) {\n\n\t'use strict';\n\n\texports['default'] = topic['default'].extend({});\n\n});","define('learning/models/prereq', ['exports', 'learning/models/topic'], function (exports, topic) {\n\n\t'use strict';\n\n\texports['default'] = topic['default'].extend({});\n\n});","define('learning/models/topic', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(\"string\"),\n    parent: DS['default'].belongsTo(\"topic\"),\n    edges: DS['default'].hasMany(\"edge\"),\n\n    prereqs: DS['default'].hasMany(\"prereq\"),\n    postreq: DS['default'].hasMany(\"postreq\"),\n    extraAttrs: DS['default'].attr(),\n\n    links: DS['default'].hasMany(\"link\")\n\n  });\n\n});","define('learning/router', ['exports', 'ember', 'learning/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"results\", { path: \"/search/:query\" });\n    this.route(\"topic\", { path: \"/:name\" });\n  });\n\n  exports['default'] = Router;\n\n});","define('learning/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('learning/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('learning/routes/results', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t\tmodel: function model(params) {\n\t\t\treturn this.store.find(\"topic\", { name: params.query });\n\t\t},\n\n\t\tsetupController: function setupController(controller, model) {\n\n\t\t\tvar nodes = [];\n\n\t\t\tvar names = model.getEach(\"name\");\n\t\t\tvar ids = model.getEach(\"ids\");\n\n\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\tnodes.push({ name: names[i], id: ids[i] });\n\t\t\t}\n\n\t\t\tvar extraAttrs = model.getEach(\"extraAttrs\")[0];\n\t\t\tvar links = extraAttrs.link;\n\t\t\tvar edges = extraAttrs.edge;\n\t\t\tvar topics = extraAttrs.primary;\n\n\t\t\tthis._super(controller, topics);\n\n\t\t\tcontroller.set(\"graph_nodes\", topics);\n\t\t\tcontroller.set(\"graph_edges\", edges);\n\t\t}\n\t});\n\n});","define('learning/routes/topic', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t\tmodel: function model(params) {\n\t\t\treturn this.store.find(\"topic\", params.name);\n\t\t} });\n\n});","define('learning/serializers/topic', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTSerializer.extend({\n\n\t\textractArray: function extractArray(store, primaryType, rawPayload) {\n\t\t\tvar map = Ember.ArrayPolyfills.map;\n\t\t\tvar payload = this.normalizePayload(rawPayload);\n\t\t\tvar primaryTypeName = primaryType.typeKey;\n\t\t\tvar outputArrays = {};\n\t\t\tvar primaryArray;\n\n\t\t\tfor (var prop in payload) {\n\t\t\t\tvar typeKey = prop;\n\t\t\t\tvar forcedSecondary = false;\n\n\t\t\t\tif (prop.charAt(0) === \"_\") {\n\t\t\t\t\tforcedSecondary = true;\n\t\t\t\t\ttypeKey = prop.substr(1);\n\t\t\t\t}\n\n\t\t\t\tvar typeName = this.typeForRoot(typeKey);\n\t\t\t\tif (!store.modelFactoryFor(typeName)) {\n\t\t\t\t\tEmber.warn(this.warnMessageNoModelForKey(prop, typeName), false);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar type = store.modelFor(typeName);\n\t\t\t\tvar typeSerializer = store.serializerFor(type);\n\t\t\t\tvar isPrimary = !forcedSecondary && type.typeKey === primaryTypeName;\n\n\t\t\t\t/*jshint loopfunc:true*/\n\t\t\t\tvar normalizedArray = map.call(payload[prop], function (hash) {\n\t\t\t\t\treturn typeSerializer.normalize(type, hash, prop);\n\t\t\t\t}, this);\n\n\t\t\t\tif (isPrimary) {\n\t\t\t\t\tprimaryArray = normalizedArray;\n\t\t\t\t\toutputArrays.primary = primaryArray;\n\t\t\t\t} else {\n\t\t\t\t\tstore.pushMany(typeName, normalizedArray);\n\t\t\t\t\toutputArrays[typeName] = normalizedArray;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// return primaryArray;\n\t\t\treturn [{ id: 300, name: \"Topic.js serializer\", link_ids: [], edge_ids: [], extraAttrs: outputArrays }];\n\t\t},\n\n\t\tnormalizePayload: function normalizePayload(payload) {\n\n\t\t\treturn this._super(payload);\n\n\t\t\t/* Add IDs to edges. Commented out for now, in favor\n\t   * of just using provided implementation\n\t   */\n\n\t\t\t/*\n\t  var incoming_edges = payload.incoming_edges;\n\t  var topics = payload.topics;\n\t  \t// Dict mapping topic ids to edges ending at those\n\t  // topics (edges we should follow to get the topic's prereqs)\n\t  var topic_id_to_edges = {};\n\t  \t// Assign each incoming_edge an ID for Ember's sake,\n\t  // set its postreq_id field to topic_id\n\t  if (incoming_edges !== undefined) {\n\t  \tfor(var i = 0; i < incoming_edges.length; i++) {\n\t  \t\tvar edge = payload.incoming_edges[i];\n\t  \t\tvar topic_id = edge.postreq_id;\n\t  \t\t\tedge.id = i + 1;\n\t  \t\tedge.topic_id = topic_id;\n\t  \t\t\tif (topic_id_to_edges[topic_id] !== undefined) {\n\t  \t\t\ttopic_id_to_edges[topic_id].push(edge.id);\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\ttopic_id_to_edges[topic_id] = [edge.id];\n\t  \t\t}\n\t  \t\t\tdelete edge.postreq_id;\n\t  \t}\n\t  }\n\t  \t\tif (topics !== undefined) {\n\t  \tfor(var topic, i = 0; topic = topics[i]; i++) {\n\t  \t\ttopic.edge_ids = topic_id_to_edges[topic.id];\n\t  \t\tdelete topic.incoming_edge_ids;\n\t  \t}\n\t  }\n\t  \tpayload.edges = payload.incoming_edges;\n\t  delete payload.incoming_edges;\n\t  // debugger;\t\t\n\t  return payload;\n\t  */\n\t\t} });\n\n});","define('learning/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\" Cumulus \");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui inverted menu\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ui left floated item\");\n        var el3 = dom.createTextNode(\" \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ui right floated item\");\n        var el3 = dom.createTextNode(\" Right menu \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"form\");\n        dom.setAttribute(el2,\"class\",\"ui item centered form\");\n        dom.setAttribute(el2,\"style\",\"width: 50%\");\n        var el3 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"ui small left icon input\");\n        var el4 = dom.createTextNode(\"\\n\t\t  \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"i\");\n        dom.setAttribute(el4,\"class\",\"search icon\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t  \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\t\\n\t\t\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui centered page grid\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"sixteen wide column\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, element = hooks.element, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [5]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [1]),2,3);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [2, 1]),0,1);\n        block(env, morph0, context, \"link-to\", [\"index\"], {}, child0, null);\n        element(env, element1, context, \"action\", [\"search\", get(env, context, \"query\")], {\"on\": \"submit\"});\n        inline(env, morph1, context, \"input\", [], {\"class\": \"ui left icon\", \"value\": get(env, context, \"query\"), \"placeholder\": \"What do you want to learn?\"});\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('learning/templates/components/topic-graph', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createElement(\"div\");\n        dom.setAttribute(el0,\"class\",\"topic-graph\");\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('learning/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('learning/templates/results', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\", id: \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,1,2,contextualElement);\n            content(env, morph0, context, \"topic.name\");\n            content(env, morph1, context, \"topic.id\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\t\t\t\t\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            var el2 = dom.createTextNode(\" Edge: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\", starting at \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\" ending at \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\" \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,0,1);\n            var morph1 = dom.createMorphAt(element0,1,2);\n            var morph2 = dom.createMorphAt(element0,2,3);\n            content(env, morph0, context, \"edge.id\");\n            content(env, morph1, context, \"edge.prereq_id\");\n            content(env, morph2, context, \"edge.topic.id\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\t\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[2]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,1,2,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"topic\", get(env, context, \"topic\")], {\"class\": \"item\"}, child0, null);\n          block(env, morph1, context, \"each\", [get(env, context, \"topic.edges\")], {\"keyword\": \"edge\"}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"ui message\");\n          var el2 = dom.createTextNode(\" No results \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui segment\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ui list\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\t\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui segment\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"ui header\");\n        var el3 = dom.createTextNode(\" Yo \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),0,1);\n        var morph1 = dom.createMorphAt(element1,2,-1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [3]),2,3);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [5]),0,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"topic\"}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"noResults\")], {}, child1, null);\n        inline(env, morph2, context, \"view\", [\"topic-graph\"], {\"nodes\": get(env, context, \"graph_nodes\"), \"edges\": get(env, context, \"graph_edges\")});\n        content(env, morph3, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('learning/templates/topic', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\t\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"target\",\"_blank\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,-1,-1);\n          element(env, element0, context, \"bind-attr\", [], {\"href\": \"link.url\"});\n          content(env, morph0, context, \"link.title\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui centered header\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"ui link list\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,-1);\n        content(env, morph0, context, \"name\");\n        block(env, morph1, context, \"each\", [get(env, context, \"links\")], {\"keyword\": \"link\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('learning/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('learning/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('learning/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('learning/tests/controllers/results.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/results.js should pass jshint', function() { \n    ok(true, 'controllers/results.js should pass jshint.'); \n  });\n\n});","define('learning/tests/helpers/resolver', ['exports', 'ember/resolver', 'learning/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('learning/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('learning/tests/helpers/start-app', ['exports', 'ember', 'learning/app', 'learning/router', 'learning/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('learning/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/edge.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/edge.js should pass jshint', function() { \n    ok(true, 'models/edge.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/incoming-edge.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/incoming-edge.js should pass jshint', function() { \n    ok(true, 'models/incoming-edge.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/link.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/link.js should pass jshint', function() { \n    ok(true, 'models/link.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/postreq.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/postreq.js should pass jshint', function() { \n    ok(true, 'models/postreq.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/prereq.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/prereq.js should pass jshint', function() { \n    ok(true, 'models/prereq.js should pass jshint.'); \n  });\n\n});","define('learning/tests/models/topic.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/topic.js should pass jshint', function() { \n    ok(true, 'models/topic.js should pass jshint.'); \n  });\n\n});","define('learning/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('learning/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('learning/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('learning/tests/routes/results.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/results.js should pass jshint', function() { \n    ok(false, 'routes/results.js should pass jshint.\\nroutes/results.js: line 21, col 13, \\'links\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('learning/tests/routes/topic.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/topic.js should pass jshint', function() { \n    ok(true, 'routes/topic.js should pass jshint.'); \n  });\n\n});","define('learning/tests/serializers/topic.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/topic.js should pass jshint', function() { \n    ok(false, 'serializers/topic.js should pass jshint.\\nserializers/topic.js: line 6, col 19, \\'Ember\\' is not defined.\\nserializers/topic.js: line 23, col 13, \\'Ember\\' is not defined.\\n\\n2 errors'); \n  });\n\n});","define('learning/tests/test-helper', ['learning/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('learning/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:application\", \"ApplicationAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('learning/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:application\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/application-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/controllers/results-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:results\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/controllers/results-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/results-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/results-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/controllers/topics-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:topics\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/controllers/topics-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/topics-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/topics-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/edge-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"edge\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/edge-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/edge-test.js should pass jshint', function() { \n    ok(true, 'unit/models/edge-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/incoming-edge-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"incoming-edge\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/incoming-edge-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/incoming-edge-test.js should pass jshint', function() { \n    ok(true, 'unit/models/incoming-edge-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/link-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"link\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/link-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/link-test.js should pass jshint', function() { \n    ok(true, 'unit/models/link-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/postreq-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"postreq\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/postreq-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/postreq-test.js should pass jshint', function() { \n    ok(true, 'unit/models/postreq-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/prereq-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"prereq\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/prereq-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/prereq-test.js should pass jshint', function() { \n    ok(true, 'unit/models/prereq-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/models/topic-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"topic\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('learning/tests/unit/models/topic-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/topic-test.js should pass jshint', function() { \n    ok(true, 'unit/models/topic-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:application\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/application-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/routes/search/results-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:search/results\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/routes/search/results-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/search');\n  test('unit/routes/search/results-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/search/results-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/routes/topic-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:topic\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/routes/topic-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/topic-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/topic-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/routes/topics-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:topics\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('learning/tests/unit/routes/topics-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/topics-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/topics-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/serializers/topic-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"serializer:topic\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('learning/tests/unit/serializers/topic-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/topic-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/topic-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/unit/views/topic-graph-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:topic-graph\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('learning/tests/unit/views/topic-graph-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/topic-graph-test.js should pass jshint', function() { \n    ok(true, 'unit/views/topic-graph-test.js should pass jshint.'); \n  });\n\n});","define('learning/tests/views/topic-graph.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/topic-graph.js should pass jshint', function() { \n    ok(false, 'views/topic-graph.js should pass jshint.\\nviews/topic-graph.js: line 14, col 7, Bad line breaking before \\'&&\\'.\\nviews/topic-graph.js: line 33, col 5, Forgotten \\'debugger\\' statement?\\nviews/topic-graph.js: line 40, col 17, \\'d3\\' is not defined.\\nviews/topic-graph.js: line 42, col 17, \\'d3\\' is not defined.\\nviews/topic-graph.js: line 47, col 15, \\'d3\\' is not defined.\\nviews/topic-graph.js: line 64, col 16, \\'gnodes\\' is not defined.\\nviews/topic-graph.js: line 72, col 18, \\'gnodes\\' is not defined.\\nviews/topic-graph.js: line 40, col 9, \\'color\\' is defined but never used.\\nviews/topic-graph.js: line 64, col 9, \\'node\\' is defined but never used.\\nviews/topic-graph.js: line 72, col 9, \\'labels\\' is defined but never used.\\n\\n10 errors'); \n  });\n\n});","define('learning/views/topic-graph', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    attributeBindings: [\"style\"],\n    style: \"width: 960px; height: 500px;\",\n    classNames: [\"topic-graph\"],\n\n    isArray: function isArray(obj) {\n      return Object.prototype.toString.call(obj) === \"[object Array]\";\n    },\n\n    validateEdge: function validateEdge(source, target) {\n      return source !== undefined && target !== undefined && source !== null && target !== null;\n    },\n\n    getNodes: function getNodes() {\n      return this.get(\"nodes\");\n    },\n\n    getEdges: function getEdges() {\n      var edges = this.get(\"edges\");\n      var output = [];\n      for (var i = 0, edge; edge = edges[i]; i++) {\n        edge.source = edge.prereq_id;\n        edge.target = edge.topic_id;\n\n        if (this.validateEdge(edge.source, edge.target)) {\n          output.push(edge);\n        }\n      }\n      debugger;\n      return output;\n    },\n\n    drawGraph: function drawGraph(nodes, edges) {\n      var width = 960,\n          height = 500;\n      var color = d3.scale.category20();\n\n      var force = d3.layout.force().charge(-120).linkDistance(30).size([width, height]);\n\n      var svg = d3.select(\".topic-graph\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n      force.nodes(nodes).links(edges).start();\n\n      console.log(\"Started animation\");\n      var link = svg.selectAll(\".link\").data(edges).enter().append(\"line\").attr(\"class\", \"link\").style(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value);\n      });\n\n      console.log(\"Added links\");\n      var node = gnodes.append(\"circle\").attr(\"class\", \"node\").attr(\"r\", 5)\n      //.style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n\n      console.log(\"Added circles\");\n\n      var labels = gnodes.append(\"text\").text(function (d) {\n        return d.name;\n      });\n\n      console.log(\"Added labels\");\n\n      force.on(\"tick\", function () {\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n\n        /*          \n        gnodes.attr(\"transform\", function(d) { \n            return 'translate(' + [d.x, d.y] + ')'; \n        });\n        */\n      });\n    },\n\n    didInsertElement: function didInsertElement() {\n      this.drawGraph(this.getNodes(), this.getEdges());\n    }\n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('learning/config/environment', ['ember'], function(Ember) {\n  var prefix = 'learning';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"learning/tests/test-helper\");\n} else {\n  require(\"learning/app\")[\"default\"].create({\"name\":\"learning\",\"version\":\"0.0.0.eb010757\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdxFA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"learning.js"}