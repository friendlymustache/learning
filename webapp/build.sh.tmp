#!/bin/bash
# Based on https://github.com/knomedia/ember-cli-rails/blob/master/build.sh
 
# for (( i = 0; i < 17; i++ )); do echo "$(tput setaf $i)This is ($i) $(tput sgr0)"; done
 
function printMessage {
  color=$(tput setaf $1)
  message=$2
  reset=$(tput sgr0)
  echo -e "${color}${message}${reset}"
}
 
function boldMessage {
  color=$(tput setaf $1)
  message=$2
  reset=$(tput sgr0)
  echo -e "${color}*************************************${reset}"
  echo -e "${color}${message}${reset}"
  echo -e "${color}*************************************${reset}"
}
 
build_env="$1"
clear_assets="$2"
root_url="$3"



# Determine whether or not to clear assets folder
if [ "$clear_assets" = "" ]
  then
    clear_assets="true"
  else
    clear_assets="false"
    echo "Not clearing assets"
fi

# Set build environment to default if needed
if [ "$build_env" = "" ]
  then
    build_env="production"
fi    

# Inject baseURL into environment.js if necessary
if [ "$root_url" != "" ]
  then
    sed -i s/baseURL:./baseURL:$root_url/ public-src/config/environment.js
fi   


#echo -e "${color}Building Ember app${reset}"
boldMessage 4 "Building Ember app using environment $build_env"
cd public-src
ember build --environment $build_env
cd ../
 
printMessage 4 "Copying ember build files to rails"
cp -r public-src/dist/* public/

printMessage 4 "Swapping assets dir for ember-assets"
cp -r public/assets/* public/ember-assets && rm -R public/assets/*
# mv -f public/assets/* public/ember-assets
 
printMessage 4 "Replacing references to 'assets' with 'ember-assets' in public/index.html"
sed -i.bck s/assets/ember-assets/ public/index.html

# Remove assets folder by default; if user specifies not to do so, then
# just add script tags from public/index.html to application.html.erb
if [ "$clear_assets" = "true" ]  
  then
    printMessage 4 "Deleting existing public/ember-assets folder"
    rm -rf public/ember-assets
    printMessage 4 "Replacing application.html.erb's contents with index.html"
    cp public/index.html app/views/layouts/application.html.erb
    printMessage 4 "inserting csrf_meta_tags in head"
    sed -i.bck 's/<\/head>/<%= csrf_meta_tags %>&/' app/views/layouts/application.html.erb
     
    printMessage 4 "inserting yield in body"
    sed -i.bck 's/<body>/&<%= yield %>/' app/views/layouts/application.html.erb
  else
    printMessage 4 "Adding new ember scripts/CSS files to application.html.erb"
    scripts=$(sed -n '/<script/'p public/index.html)
    formattedScripts=$(echo "$scripts" | sed s/\"/\'/g | tr -d '\n' ) #| sed 's/ /\\ /g')
    printMessage 4 "Extracted lines: $formattedScripts"
    cmd="s#<body>#<body>$formattedScripts#"
    printMessage 4 "Sed command: $cmd"
    # sed -i.bck s#<body>#<body>    <script src='ember-assets/vendor.js'></script>
    # <script src='ember-assets/learning.js'></script>#

    sed -i.bck $cmd app/views/layouts/application.html.erb
fi

printMessage 4 "Cleaning Up"
rm -rf public_bk/
rm public/index.html.bck
 
boldMessage 4 "Done"